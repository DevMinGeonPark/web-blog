{"version":3,"sources":["component/img/MyProfilePhoto.jpg","component/Header.tsx","component/Footer.tsx","component/sidebarComponent/Posts.tsx","component/sidebarComponent/Projects.tsx","component/mainComponent/Status.tsx","component/mainComponent/Projects.tsx","component/mainComponent/Posts.tsx","component/Main.tsx","component/mainComponent/Profile.tsx","component/post/react/CondingConvention.tsx","component/projects/cShap/BlackToonManger.tsx","component/projects/python/ImageManger.tsx","component/projects/typescript/Blog.tsx","component/post/javascript/BasicSyntax.tsx","Navigation.tsx","App.tsx","index.tsx"],"names":["Header","useState","open","setOpen","searchOpen","setSearchOpen","useEffect","sidebar","document","getElementsByClassName","classList","add","remove","searchBox","querySelector","className","onClick","size","color","role","to","src","Photo","alt","aria-label","autoComplete","placeholder","href","target","Footer","Posts","title","Projects","Status","Main","Profile","CondingConvention","BlackToonManger","ImageManger","Blog","BasicSyntax","Navigation","path","exact","component","ReactCondingConvention","App","iconShape","ReactDom","render","getElementById"],"mappings":"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","file":"static/js/main.5a959341.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MyProfilePhoto.4bad2c75.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { BsList, BsLink45Deg } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\nimport Photo from \"./img/MyProfilePhoto.jpg\";\r\n\r\nconst Header: React.FC = () => {\r\n    const [open, setOpen] = useState(true);\r\n    const [searchOpen, setSearchOpen] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const sidebar = document.getElementsByClassName('pro-sidebar-inner')[0];\r\n        open ?  sidebar.classList.add('closed'):sidebar.classList.remove('closed');\r\n        const searchBox = document.querySelector('input');\r\n        searchOpen ? searchBox?.classList.remove('focus') : searchBox?.classList.add('focus');\r\n    })\r\n\r\n    return (\r\n        <header className=\"navbar\">\r\n            <div className=\"sidebar-button\" onClick={() => setOpen(!open)}>\r\n                <BsList size=\"25px\" color=\"black\" role=\"img\" className=\"icon\" />\r\n            </div>\r\n            <Link to=\"/\">\r\n                <div className=\"profile\">\r\n                    <figure>\r\n                        <img src={Photo} \r\n                        alt=\"profile\" />\r\n                    </figure>\r\n                    <div>\r\n                        <strong>Dev MinGeonPark</strong>\r\n                        <em>Stay hungry Stay Foolish</em>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <div className=\"links\">\r\n                <div className=\"search-box\">\r\n                    <input aria-label=\"Search\" autoComplete=\"off\" placeholder=\"아직 구현되지 않았습니다.\" onClick={() => setSearchOpen(!searchOpen)} />\r\n                </div>\r\n                <nav className=\"nav-links\">\r\n                    <div className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"home-non-nide\">Home</Link></div>\r\n                    <div className=\"nav-item \">\r\n                        <a href=\"https://github.com/DevMinGeonPark?tab=repositories\"\r\n                            target=\"_block\"\r\n                            className=\"can-hide\">\r\n                            Repository\r\n                            <BsLink45Deg />\r\n                        </a></div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <footer className=\"mainFooter\">\r\n            <div className=\"container\">\r\n                <p className=\"footerCopyright\">\r\n                    <strong>Copyright © 2020 All Right</strong>\r\n                    <em> MinGeonPark</em>\r\n                </p>\r\n                <p className=\"footerContent\">\r\n                    <a href=\"test\">GitHub  .  </a>\r\n                    <a href=\"test\">Repository</a>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport { MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Posts: React.FC = () => {\r\n    return (\r\n            <SubMenu title=\"Posts\">\r\n                <SubMenu title=\"Javscript\">\r\n                    {/* <MenuItem>Javscript Basic Syntax - prototype</MenuItem> */}\r\n                </SubMenu>\r\n                <SubMenu title=\"React\">\r\n                    <MenuItem><Link to=\"/react/conding-convention\">React convention</Link></MenuItem>\r\n                </SubMenu>\r\n                {/* <SubMenu title=\"Scss\">\r\n                    <MenuItem>Scss convention</MenuItem>\r\n                </SubMenu>\r\n                <SubMenu title=\"C#\">\r\n                    <MenuItem>C# Convention</MenuItem>\r\n                </SubMenu> */}\r\n            </SubMenu>\r\n    );\r\n}\r\nexport default Posts;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuItem, SubMenu } from 'react-pro-sidebar';\r\n\r\n\r\n\r\nconst Projects: React.FC = () => {\r\n    return (\r\n        <SubMenu title=\"Projects\">\r\n            <SubMenu title=\"C#\">\r\n                <MenuItem><Link to=\"/projects/c-shap/black-toon-manger\">BlackToonManger</Link></MenuItem>\r\n            </SubMenu>\r\n            <SubMenu title=\"Typescript\">\r\n                <MenuItem><Link to=\"/projects/typescript/blog\">MyBlog</Link></MenuItem>\r\n            </SubMenu>\r\n            <SubMenu title=\"Python\">\r\n                <MenuItem><Link to=\"/python/image-manger\">ImageManger With Python Seleminum</Link></MenuItem>\r\n            </SubMenu>\r\n        </SubMenu>\r\n    );\r\n}\r\nexport default Projects;","import React from 'react';\r\n\r\nconst Status: React.FC = () => {\r\n    return (\r\n        <div className=\"status-box\">\r\n            <h1> Stay hungry Stay foolish </h1>\r\n            <p>끊임없이 탐구하자.</p>\r\n            <p>아직은 개발 진행중인 블로그입니다. 부족한점은 지적해주시면 고쳐가도록하겠습니다.<br/>\r\n                영어를 잘하는 것은 아니지만 많이 사용해야 익숙해지고 실력향상이 된다는 생각에 자주 쓰려고 하고 있습니다. 영어가 많아도 이해해주시면 감사하겠습니다.!\r\n                사진의 경우 코로나19로 인해 휴가를 나가지못해 과거 사진으로 대체했으나 올리기엔 적합치 않아보입니다. 죄송합니다.\r\n            </p>\r\n            <ul>\r\n                <li><a href=\"https://github.com/DevMinGeonPark?tab=repositories\" target=\"_block\">\r\n                    Repository</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default Status;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsLink45Deg } from 'react-icons/bs';\r\n\r\n\r\nconst Projects: React.FC = () => {\r\n    return (\r\n        <div className=\"Projects\">\r\n            <h2>Projects</h2>\r\n            <div className=\"outline\">\r\n                <div className=\"outline-item\">\r\n                    <h3>C#</h3>\r\n                    <ul>\r\n                        <li><Link to=\"/projects/c-shap/black-toon-manger\">BlackToonManger<BsLink45Deg /></Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"outline-item\">\r\n                    <h3>Typescript</h3>\r\n                    <ul>\r\n                        <li><Link to=\"/projects/typescript/blog\">Blog<BsLink45Deg /></Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"outline-item\">\r\n                    <h3>Python</h3>\r\n                    <ul>\r\n                        <li><Link to=\"/python/image-manger\">ImageManger With Python Seleminum<BsLink45Deg /></Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Projects;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsLink45Deg } from 'react-icons/bs';\r\n\r\n\r\nconst Posts: React.FC = () => {\r\n    return (\r\n        <div className=\"posts\">\r\n            <h2>Posts</h2>\r\n            <div className=\"outline\">\r\n                <div className=\"outline-item\">\r\n                    <h3>Javscript</h3>\r\n                    <ul>\r\n                        {/* <li><Link to=\"/post/javascript/basicsyntax-1\">Basic Syntax - prototype</Link></li> */}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"outline-item\">\r\n                    <h3>React</h3>\r\n                    <ul>\r\n                        <li><Link to=\"/react/conding-convention\">Coding Convention<BsLink45Deg /></Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Posts;","import React from 'react';\r\nimport Status from './mainComponent/Status';\r\nimport Projects from './mainComponent/Projects';\r\nimport Posts from './mainComponent/Posts';\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <Status />\r\n                <Projects />\r\n                <Posts />\r\n                <h1>추가 구현예정</h1>\r\n                <ul>\r\n                    <li>검색 기능</li>\r\n                    <li>반응형 디자인 유지보수</li>\r\n                    <li>댓글기능</li>\r\n                    <li>로그인 기능</li>\r\n                    <li>개인 프로필 컴포넌트 만들기</li>\r\n                </ul>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default Main;","import React from \"react\";\r\n\r\nconst Profile: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <div className=\"container\">\r\n                    <div className=\"personal-card-item\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <figure><img src=\"https://s3.ivisa.com/website-assets/blog/id-photo2.jpg\" alt=\"profile\" /></figure>\r\n                                <div className=\"personal-data\">\r\n                                    <div className=\"profiles\">\r\n                                        <h4>MinGeon Park</h4>\r\n                                        <p>Developer</p>\r\n                                        <p>R.O.K Busan</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"link-list\">\r\n                                <ul>\r\n                                    <li className=\"link-item\">\r\n                                        <h6>Website</h6>\r\n                                        <span>DevMinGeonPark</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h6>Github</h6>\r\n                                        <span>DevMinGeonPark-repository</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h6>instargram</h6>\r\n                                        <span>#MinGeonPark</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <h6>facebook</h6>\r\n                                        <span>#MinGeonPark</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"about-item\">\r\n                        <div className=\"personal-status\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"status\">\r\n                                        <div className=\"status-key\"><h6>Full Name</h6></div>\r\n                                        <div className=\"status-item\">MinGeonPark</div>\r\n                                        <hr/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                dd\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\n\r\nconst CondingConvention: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>React Coding Convention : don't complete</h2>\r\n                <div className=\"outline\">\r\n                    <div className=\"outline-item\">\r\n                        <h3 className=\"sub-title\">Introduction</h3>\r\n                        <p>\r\n                            블로그를 개발하던 중 막히는 부분들이 많았다.\r\n                            그런데 그 이유가 기술의 개념적인 부분들을 몰라서 그런 경우도 많지만,\r\n                            coding convention이 정해져 있지않아서 코드가 길어지면서 관리가 힘들어지고\r\n                            오류의 원인을 정확히 파악하지 못한 경우가 많았다.\r\n                            그러다보니 계속 이런식이면 변화가 없다는 생각이 문득 들어 React의 conding Convention을 찾던 중\r\n                            AirBnB에서 Github에 올린 \"Airbnb React/JSX Style Guide\"를 참고하게되었다. 또한 필요하다고 생각되는 부분만 발췌하였고 내 경우에 맞게 변경하였다.\r\n                            아직 가이드에 맞게 수정하는 중이라 가이드대로 되지 않은 부분들이 많지만 관련된 부분들을 정리해두는게 좋을 것 같아 작성하게되었다. <br />\r\n                            자세한 내용은 \"https://github.com/airbnb/javascript/tree/master/react\"에서 참고가능하다.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"outline-item\">\r\n                        <h3 className=\"sub-title\">Main Subject</h3>\r\n                        <ul>\r\n                            <li>\r\n                                Basic Rule\r\n                                <ul>\r\n                                    <li> Only include one React component per file.\r\n                                        <p>However, Multiple Stateless, or Pure, Components are allowed pre file.</p>\r\n                                    </li>\r\n                                    <li> Always use TSX syntax</li>\r\n                                    <li>Do not use <code>React.createElement</code> unless you’re initializing the app from a file that is not JSX.</li>\r\n                                </ul>\r\n                                <li> Do not use mixins. </li>\r\n                                <li>Naming\r\n                                    <ul>\r\n                                        <li>\r\n                                            Extensions:\r\n                                            Use <code>.tsx</code> extension for React component\r\n                                        </li>\r\n                                        <li>\r\n                                            Filename:\r\n                                            Use PascalCase for filenames\r\n                                        </li>\r\n                                        <li>\r\n                                            Reference Naming:\r\n                                            use PascalCase for React component and camelCase for their instances.<br />\r\n                                            <pre className=\"codebox\">\r\n                                                <p>bad</p>\r\n                                                <p>import reservationCard from './ReservationCard';</p>\r\n\r\n                                                <p>good</p>\r\n                                                <p>import ReservationCard from './ReservationCard';</p>\r\n\r\n                                                <p>bad</p>\r\n                                                <p>const ReservationItem = &#60;ReservationCard /&#62;</p>\r\n\r\n                                                <p>good</p>\r\n                                                <p>const reservationItem = &#60;ReservationCard /&#62;;</p>\r\n                                            </pre>\r\n                                        </li>\r\n                                        <li>\r\n                                            Component Naming:\r\n                                            Use the filename as the component name.\r\n                                            For example, <code>App.tsx</code> should have a reference name of <code>App</code>.\r\n                                            However, for root components of a directory, use index.jsx as the filename and use the directory name as the component name\r\n                                            <pre className=\"codebox\">\r\n                                                <p>bad</p>\r\n                                                <p>import Footer from './Footer/Footer';</p>\r\n\r\n                                                <p>bad</p>\r\n                                                <p>import Footer from './Footer/Footer';</p>\r\n\r\n                                                <p>good</p>\r\n                                                <p>import Footer from '</p>\r\n                                            </pre>\r\n                                        </li>\r\n                                        <li>\r\n                                            Props Naming: Avoid using DOM component prop names for different purposes.<br />\r\n                                            ::variant 공부 후 변경하기.\r\n                                            <pre className=\"codebox\">\r\n                                                <p>bad</p>\r\n                                                <p>&#60;MyComponent style=\"fancy\" /&#62;</p>\r\n\r\n                                                <p>bad</p>\r\n                                                <p>&#60;MyComponent ClassName=\"fancy\" /&#62;</p>\r\n\r\n                                                <p>good</p>\r\n                                                <p>&#60;MyComponent variant=\"fancy\" /&#62;</p>\r\n                                            </pre>\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Alignment: Follow these alignment styles for JSX syntax.\r\n                                    <div className=\"codebox\">\r\n\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    Quotes: Always use double quotes (\"\") for JSX attributes, but single quotes ('') for all other JS.\r\n                                    <div className=\"codebox\">\r\n                                        <p>bad</p>\r\n                                        <p>&#60; Foo bar='bar' /&#62;</p>\r\n                                        <p>good</p>\r\n                                        <p>&#60; Foo style= &#123;&#123; left: \"20px\" &#125;&#125; /&#62;</p>\r\n                                        <p>&#60; Foo style= &#123;&#123; left: '20px' &#125;&#125; /&#62;</p>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    Spacing:\r\n                                            <ul>\r\n                                        <li>\r\n                                            Always include a single space in your self0closing tag.\r\n                                            <div className=\"codebox\">\r\n                                                <p> bad</p>\r\n                                                <p>&#60;Foo/&#62;</p>\r\n                                                <p>bad</p>\r\n                                                <p>&#60;Foo<br/>\r\n                                                / &#62;</p>\r\n                                                <p>&#60;Foo /&#62;</p>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li> Do not pad Jsx curly braces with spaces.</li>\r\n                                        <div className=\"codebox\">\r\n                                            <p>bad</p>\r\n                                            <p>&#60;Foo bar=&#123; bax &#125; /&#62;</p>\r\n                                            <p>bad</p>\r\n                                            <p>&#60;Foo bar=&#123;bax&#125; /&#62;</p>\r\n                                        </div>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Props:\r\n                                            <ul>\r\n                                        <li>Always use camelCase for props names, or Pascal Case if the prop value is a React component.</li>\r\n                                        <li>Omit the value of the prop when it is explicitly true.</li>\r\n                                        <li>Always inclued an alt prop on <code>&#60;img&#62;</code> tag.\r\n                                                if the image is presentational, alt can be an empty string or the\r\n                                                <code>&#60;img&#62;</code> must have <code>role=\"presentation\"</code></li>\r\n                                        <li>Do not use words like \"image\", \"photo\", or \"pictrue\" in <code>&#60;img&#62;</code> <code>alt</code> props.</li>\r\n                                        <li>Use only valid, non-abstract ARIA roles.</li>\r\n                                        <li>Do not <code>accessKey</code> on elements.</li>\r\n                                        <li>\r\n                                            Avoid using an array index as key prop, prefer a stable ID <br />\r\n                                            We don't recommend using indexes for keys if the order of items may change.\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>Refs:\r\n                                            <ul><li>Always use ref callbacks.</li></ul>\r\n                                </li>\r\n                                <li>Parentheses:\r\n                                            <ul><li>Wrap JSX tags in parentheses when they span more than one line.</li></ul>\r\n                                </li>\r\n                                <li>Tag:\r\n                                    <ul>\r\n                                        <li>Always self-close tag that have no children.</li>\r\n                                        <li>If your component has multiline properties, close tis tag on a new line.</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>Methods:\r\n                                    <ul>\r\n                                        <li>\r\n                                            Use arrow functions to close over loacl variables. it is handy when your need to pass additional data to an event handler.<br />\r\n                                            Bind event handlers for the render method in the constructor.\r\n                                        </li>\r\n                                        <li>Do not use underscore prefix for internal methods of a React component</li>\r\n                                        <li>Be sure to return a balue in your <code>render</code> methods.</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default CondingConvention;","import React from 'react';\r\nimport {BsLink45Deg} from 'react-icons/bs';\r\n\r\nconst BlackToonManger: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>Project : BlackToonManger With C#</h2>\r\n                <a href=\"https://github.com/DevMinGeonPark/Project-BlackToonManager\">Github<BsLink45Deg /></a>\r\n                <h4 className=\"sub-title\">개발동기</h4>\r\n                <p>\r\n                    고교 떄 C언어, 대학에서 python을 공부했지만 대부분의 프로젝트가 Toy-Project \r\n                    수준도 되지못하는 기초적인 수준의 별찍기나 포인터를 활용한 전화번호부 만들기 정도 밖에 \r\n                    해보지 못했다. 공군을 지원해 개발병으로 군생활을 해보니 나와 비슷한 나이에 뛰어난 실력을 가진 사람들이 \r\n                    너무나 많았고 나도 한번 제대로 된 Toy-Project를 만들어보자는 생각에 평소 좋아하던 웹툰이나 만화를 받아볼 수 있는 프로그램을 만들어보게 되었다. <br/>\r\n                    개발언어를 C#으로 선택한 이유는 객체지향에 관한 지식이 거의 전무했기에 친한 선임이 애용하는 C#을 선택하여 많은 도움을 받고자했다. \r\n                    사이트는 테스트위주의 개발을 진행했고, 그 과정에서 서버로 보내는 요청이 상당히 많아서 네이버같은 사이트는 차단당할 위험이 크다 생각해 선정하게 되었다.\r\n                </p>\r\n\r\n                <h4 className=\"sub-title\">프로그램 설명</h4>\r\n                <p>\r\n                    기본적으로 콘솔창으로 실행하는 프로그램. GUI로 구성하지 않은 이유는 비동기적으로 GUI를 굳이 보여줄 필요가 없다고 생각해서이다. <br />\r\n                    사용자에게 파일명을 입력받고 사이트에 요청을 보낸다. 여기서 사이트는 리다이렉션되는 사이트에 자동으로 접속하게 구현했다. <br />\r\n                    입력받은 파일명을 사이트의 js로 구성된 json파일에 접근해 검색한다. <br />\r\n                    검색된 웹툰명들을 반환하고 유저의 선택을 받는다.\r\n                    유저가 선택한 파일을 다운받을 준비를 한다.<br />\r\n                    유저는 파일을 한개만 다운받을지 다 다운받을지를 결정할 수 있다.<br />\r\n                    유저의 선택에 따라 다운로드를 진행한다. 다운로드 진행중에는 폴더를 자동으로 만들며, 자동으로 압축까지 진행하여 저장한다.<br />\r\n                </p>\r\n\r\n                <h4 className=\"sub-title\">예상되는 오류</h4>\r\n                <p>\r\n                    사이트 관리자가 div태그를 한 개 더 추가하는 방식으로 크롤링을 피하려하는 경우가 많다. null이 반환되었다는 오류는 주로 이 경우이다.\r\n                </p>\r\n\r\n                <h4 className=\"sub-title\">후기</h4>\r\n                <p>\r\n                    아무것도 모르는 상태에서 시작한거라 모든 것들이 다 어렵고 새로웠다. <br />\r\n                    코딩 컨벤션, 비동기적 프로그래밍, 서버에 요청을 보내거나 받기, Josn파일 처리, 크롤링 방법론, C#의 기술들과 객체지향의 기본적인 개념 등을 배웠고,\r\n                    오류가 나면 하루종일 해결해보고 선임에게 코드리뷰를 받았는데, 하루종일 까이고 고치는걸 반복하며 실력이 많이 늘은걸 느꼈다. <br />\r\n                    이번 프로젝트를 통해 코딩 컨벤션의 중요성과 처음 기획단계를 얼마나 촘촘하게 해야되는지 느꼈다. <br />\r\n                    이 프로젝트의 경우 Top-Down 방식이 아닌 테스트위주 방식으로 개발했는데, 만들고나면 새로운 기능이 필요하고 새로운 기능을 만들면 오류가 나는 걸 경험하면서 초기 기획의 중요성을 뼈저리게 느꼈다. <br />\r\n                </p>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default BlackToonManger;","import React from 'react';\r\nimport { BsLink45Deg } from 'react-icons/bs';\r\n\r\nconst ImageManger: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>Project : ImageManger with python Seleminum</h2>\r\n                <a href=\"https://github.com/DevMinGeonPark/BlackToonManger\">Github<BsLink45Deg /></a>\r\n                <h4 className=\"sub-title\">개발동기</h4>\r\n                <p>\r\n                    추석 떄 스파르타 코딩클럽이라는 사이트에서 무료로 강의와 코칭을 한다길래 크롤링을 한번도 해본적이 없기에 이번 기회에 해보자는 마인드로 시작했다. <br />\r\n                    강의에서는 python seleminum을 이용해서 다음에 원하는 연예인사진을 자동으로 긁어오는 프로그램을 구현하는데 개인적으로 검색은 다 구글로 해결하는 입장에서 구글로 구현하는게 맞지 않아 싶어서 강의와는 다르게 구글로 구현했다.\r\n                </p>\r\n\r\n                <h4 className=\"sub-title\">프로그램 설명</h4>\r\n                <p>\r\n                    seleminum을 이용해서 구글에 원하는 이미지를 긁어오는 간단한 프로그램. 단편적으로 구현되어서 검색어를 입력받고 이미지를 다운받게는 구현되어있지 않다. 차후 블랙툰매니저에서는 구현되어있다.\r\n                </p>\r\n\r\n                <h4 className=\"sub-title\">후기</h4>\r\n                <p>\r\n                    객체지향 프로그램을 해본적이 없다보니 너무 어렵게만 생각한 것 같다. 강의가 너무 간단하게 구성되어있어서 중간에 하차하고 혼자만들었다. 이후 블렉툰 매니저를 만들 자신감을 얻었다.\r\n                </p>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default ImageManger;","import React from 'react';\r\nimport {BsLink45Deg} from 'react-icons/bs';\r\n\r\nconst Blog: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>Project : Blog With Typescript and React and scss</h2>\r\n                <a href=\"https://github.com/DevMinGeonPark/Blog\">Github<BsLink45Deg /></a>\r\n                <h4 className=\"sub-title\">개발동기</h4>\r\n                <p>\r\n                    전역 후 취업이라는 결정을 하고 취업분야들을 살펴봤다. <br />\r\n                    필자는 부산에 살고있기에 부산위주로 알아봤으나 아직 대학 재학 중인 현재 신분으로는 공고들의 대부분을 학력에서 짤린다는걸 꺠달았고 그중에서도 백엔드 분야는 대졸은 기본이라는 걸 알게되었다. \r\n                    그래서 프론트부터 올라가다는 마인드로 웹 공부를 결심했고, 최근 업계에서 유행한다는 Angular.js, React.js, Vue.js 중 React를 선택하여 SAP 웹을 개발하게되었다.\r\n                </p>\r\n\r\n                <h4 className=\"sub-title\">프로그램 설명</h4>\r\n                <p>\r\n                    기본적으로 SAP 형식의 웹을 React로 제작하고자하였고 보통 정적인 타입형식을 채용하는 \r\n                    컴파일러 언어들만 공부했던 터라 프로토타입기반에 인터프리터언어인 자바스크립트보다는 \r\n                    정적인 타입인 TypeScript를 선택하여 진행했다. <br />\r\n                    그리고 처음에는 CSS 기반으로 프로그램을 구현하고있었지만 개발 중 구조적으로 복잡해지니 디자인 관리가 어려워져 SCSS를 사용하기 시작했다.\r\n                    개발 환경은 VSCode + Windows 10 pro로 진행했고 최대한 반응형으로 제작하려고 노력했지만 \r\n                    짧은 기간안에 Top-down 방식이 아닌 테스트위주로 진행하였기에 유지보수 측면이나 반응형 측면에서 아직 미숙한것같다. 차후 계속 개선해나갈 예정이다.\r\n                </p>\r\n\r\n                <h4 className=\"sub-title\">후기</h4>\r\n                <p>\r\n                    script 계열의 프로토타입이라는 방식이 너무 생소했고 React자체도 처음이라 검색과 공식문서는 사실상 끼고 살았다. \r\n                    매일 저녁 점호 전에 React와 ES6 공식문서를 탐독하며 선임이 왜 맨날 공식문서를 시간나면 보라는 지를 이해하는 시간이였다. <br/>\r\n                    기업에서 왜 철저하게 설계하고 디자인분야 기획분야를 따로 나누는지 깨달았다. 처음에 정해놓지 않으니 중간중간에 꼬이는걸 느꼈다.\r\n                    그리고 디자인 능력이 부족한것을 느꼈고.. 무엇보다 정해놓지 않고 시작하니 계속 무언가를 추가했다.\r\n                    일례로 Typescript,scss는 어느정도 개발중에 불편함을 깨달았고 개발환경부터 다시 세팅하여 새로 제작했다. <br/>\r\n                    또 원격으로 개발을 진행했던 터라 CAPSLOCK키와 한영키가 먹히지 않아 너무 불편했고 중간에 클래스 기반으로 구현중인 코드를 Hook 기반으로 재구현하는데 또 시간을 소요했다.\r\n                    그럼에도 나 혼자 노베이스부터 여기까지 혼자 구현했다는거에 의의를 두고싶다.\r\n                </p>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default Blog;","import React from 'react';\r\n\r\nconst BasicSyntax: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>JavaScript Basix Syntax - prototype</h2>\r\n                <div className=\"outline\">\r\n                    <div className=\"outline-item\">\r\n                        <h3 className=\"sub-title\">Introduction</h3>\r\n                        <p>\r\n                            JavaScript는 프로토타입 기반언어로 기존에 공부하던 객체지향언어, 절차지향언어들과는 조금 다른 방식으로 클래스 등을 정의한다\r\n                           이런 개념적인 부분들이 javascript를 아는데 큰 도움이 될꺼라 여겨 정리해두려고한다.<br />\r\n                           이장에서는 가장 중요한 개념인 프로토타입에 대해 다뤄볼려고한다.\r\n                       </p>\r\n                    </div>\r\n                    <div className=\"outline-item\">\r\n                        <h3 className=\"sub-title\">Main Subject</h3>\r\n                        <h4>Object Oriented</h4>\r\n                        <p>\r\n                            프로토타입에 대해 설명하려면 객체지향에 대해 먼저 설명해야 하지 않을까 싶다.<br />\r\n                           '객체지향'은 모든 물체를 '객체'라는 개념적 틀로 바라보는 시각에서 시작된 개념이다.<br />\r\n                            예를들어, 우리가 잘 아는 유명한 게임인 리그오브레전드라는 게임을 개발한다고 가정해보자.<br />\r\n                            리그오브레전드에는 100가지가 넘는 챔피언이 있는데, 먼저 이 챔피언들의 공통적인 부분들을 살펴보자.<br />\r\n                            먼저 챔피언들은 각자의 이름, 외형, 스킬, 데미지 값을 가지고있다. 이부분들은 세부적으로는 다르지만 크게 봤을떄 공통적이다.<br />\r\n                            그럼 우리는 champion 객체, 쉽게말하면 거푸집과같은 틀을 만들 수 있다. <br />\r\n                            이 틀은 이름,외형,스킬,데미지가 들어갈 것이고 객체명은 champion이다.\r\n                            이 champion예제를 조금 더 깊게 들어가서 야스오라는 챔피언으로 예를들면\r\n                            야스오는 패시브스킬, q스킬 w스킬 e스킬 r스킬을 가지고있다.<br />\r\n                            이 스킬이라는 녀석들은 사용자가 눌렀을 떄 그에 대한 반응이 나온다. 이처럼 불러졌을 떄 어떠한 것을 처리하고 반환하기도하는 것을\r\n                            우리는 절차지향에서는 함수라고 불렀다. 이 함수가 객체안에서 사용되며 객체라는 범위를 벗어나지 하는 것(특수한 경우는 제외한다) 메서드라고 보면된다.\r\n                            우리의 예에서 메서드는 유저가 눌렀을 떄 반응하여 필요한 스킬이 사용되는 것이라고 이해하면 될것같다.<br />\r\n                            또 야스오는 외형, 데미지를 가지고있다. 이를 속성이라는 객체지향의 개념으로 정의할 수 있다.\r\n                            지금까지의 설명을 코드화하면 <br />\r\n                        </p>\r\n                        <div className=\"codebox\">\r\n                            <code>\r\n                                class Canmpion :\r\n                                    'private string name = yasuo;' //챔피언의 이름을 정의\r\n                                    'private var appearance = yasuo;' //\r\n                            </code>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default BasicSyntax;","import React from 'react';\r\nimport Main from './component/Main';\r\nimport Profile from './component/mainComponent/Profile'\r\nimport ReactCondingConvention from './component/post/react/CondingConvention';\r\nimport BlackToonManger from './component/projects/cShap/BlackToonManger';\r\nimport ImageManger from 'component/projects/python/ImageManger';\r\nimport Blog from 'component/projects/typescript/Blog';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport BasicSyntax from 'component/post/javascript/BasicSyntax';\r\n\r\nconst Navigation: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Main} />\r\n            <Route path=\"/profile\" exact component={Profile} />\r\n            <Route path=\"/projects/c-shap/black-toon-manger\" exact component={BlackToonManger} />\r\n            <Route path=\"/projects/typescript/blog\" exact component={Blog} />\r\n            <Route path=\"/python/image-manger\" exact component={ImageManger} />\r\n            <Route path=\"/react/conding-convention\" exact component={ReactCondingConvention} />\r\n            <Route path=\"/post/javascript/basicsyntax-1\" exact component={BasicSyntax} />\r\n            <Redirect path=\"*\" to=\"/\" />\r\n        </Switch>\r\n    );\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport Header from './component/Header';\r\nimport Footer from './component/Footer';\r\nimport Posts from './component/sidebarComponent/Posts';\r\nimport Projects from 'component/sidebarComponent/Projects';\r\nimport Navigation from './Navigation';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { ProSidebar, Menu } from 'react-pro-sidebar';\r\nimport './scss/Style.scss';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Header />\r\n            <div className=\"sidebar-mask\" />\r\n            <ProSidebar>\r\n                <Menu iconShape=\"square\">\r\n                    <Projects/>\r\n                    <Posts />\r\n                </Menu>\r\n            </ProSidebar>\r\n            <Navigation />\r\n            <Footer />\r\n        </HashRouter>\r\n    );\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}