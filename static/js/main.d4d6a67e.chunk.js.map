{"version":3,"sources":["component/Header.tsx","component/Footer.tsx","component/sidebarComponent/Posts.tsx","component/sidebarComponent/Projects.tsx","component/MainComponent/Status.tsx","component/MainComponent/Projects.tsx","component/MainComponent/Posts.tsx","component/Main.tsx","component/Post/React/CondingConvention.tsx","component/Projects/Cshap/BlackToonManger.tsx","component/Projects/Python/ImageManger.tsx","Navigation.tsx","App.tsx","index.tsx"],"names":["Header","useState","open","setOpen","searchOpen","setSearchOpen","useEffect","sidebar","document","getElementsByClassName","classList","add","remove","searchBox","querySelector","className","onClick","size","color","role","to","src","alt","aria-label","autoComplete","placeholder","href","target","Footer","Posts","title","Projects","Status","Main","CondingConvention","BlackToonManger","ImageManger","Navigation","path","exact","component","ReactCondingConvention","App","basename","iconShape","ReactDom","render","getElementById"],"mappings":"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","file":"static/js/main.d4d6a67e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BsList, BsLink45Deg } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header: React.FC = () => {\r\n    const [open, setOpen] = useState(true);\r\n    const [searchOpen, setSearchOpen] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const sidebar = document.getElementsByClassName('pro-sidebar-inner')[0];\r\n        open ?  sidebar.classList.add('closed'):sidebar.classList.remove('closed');\r\n        const searchBox = document.querySelector('input');\r\n        searchOpen ? searchBox?.classList.remove('focus') : searchBox?.classList.add('focus');\r\n    })\r\n\r\n    return (\r\n        <header className=\"navbar\">\r\n            <div className=\"sidebar-button\" onClick={() => setOpen(!open)}>\r\n                <BsList size=\"25px\" color=\"black\" role=\"img\" className=\"icon\" />\r\n            </div>\r\n            <Link to=\"/\">\r\n                <div className=\"profile\">\r\n                    <figure>\r\n                        <img src=\"https://s3.ivisa.com/website-assets/blog/id-photo2.jpg\" \r\n                        alt=\"profile\" />\r\n                    </figure>\r\n                    <div>\r\n                        <strong>Dev MinGeonPark</strong>\r\n                        <em>Stay hungry Stay Foolish</em>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <div className=\"links\">\r\n                <div className=\"search-box\">\r\n                    <input aria-label=\"Search\" autoComplete=\"off\" placeholder=\"아직 구현되지 않았습니다.\" onClick={() => setSearchOpen(!searchOpen)} />\r\n                </div>\r\n                <nav className=\"nav-links\">\r\n                    <div className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"home-non-nide\">Home</Link></div>\r\n                    <div className=\"nav-item \">\r\n                        <a href=\"https://github.com/DevMinGeonPark?tab=repositories\"\r\n                            target=\"_block\"\r\n                            className=\"can-hide\">\r\n                            Repository\r\n                            <BsLink45Deg />\r\n                        </a></div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <footer className=\"mainFooter\">\r\n            <div className=\"container\">\r\n                <p className=\"footerCopyright\">\r\n                    <strong>Copyright © 2020 All Right</strong>\r\n                    <em> MinGeonPark</em>\r\n                </p>\r\n                <p className=\"footerContent\">\r\n                    <a href=\"test\">GitHub  .  </a>\r\n                    <a href=\"test\">Repository</a>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport { MenuItem, SubMenu } from 'react-pro-sidebar';\r\n\r\nconst Posts: React.FC = () => {\r\n    return (\r\n            <SubMenu title=\"Posts\">\r\n                <SubMenu title=\"Javscript\">\r\n                    <MenuItem>Javscript Basic Syntax</MenuItem>\r\n                </SubMenu>\r\n                <SubMenu title=\"React\">\r\n                    <MenuItem>React convention</MenuItem>\r\n                </SubMenu>\r\n                <SubMenu title=\"Scss\">\r\n                    <MenuItem>Scss convention</MenuItem>\r\n                </SubMenu>\r\n                <SubMenu title=\"C#\">\r\n                    <MenuItem>C# Convention</MenuItem>\r\n                </SubMenu>\r\n            </SubMenu>\r\n    );\r\n}\r\nexport default Posts;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuItem, SubMenu } from 'react-pro-sidebar';\r\n\r\nconst Projects: React.FC = () => {\r\n    return (\r\n        <SubMenu title=\"Projects\">\r\n            <SubMenu title=\"C#\">\r\n                <MenuItem><Link to=\"/projects/c-shap/black-toon-manger\">BlackToonManger</Link></MenuItem>\r\n            </SubMenu>\r\n            <SubMenu title=\"Typescript\">\r\n                <MenuItem><Link to=\"/\">MyBlog</Link></MenuItem>\r\n            </SubMenu>\r\n            <SubMenu title=\"Python\">\r\n                <MenuItem><Link to=\"/python/image-manger\">ImageManger With Python Seleminum</Link></MenuItem>\r\n            </SubMenu>\r\n        </SubMenu>\r\n    );\r\n}\r\nexport default Projects;","import React from 'react';\r\n\r\nconst Status: React.FC = () => {\r\n    return (\r\n        <div className=\"status\">\r\n            <h1> Stay hungry Stay foolish </h1>\r\n            <p>끊임없이 탐구하자.</p>\r\n            <p>아직은 개발 진행중인 블로그입니다. 부족한점은 지적해주시면 고쳐가도록하겠습니다.<br/>\r\n                영어를 잘하는 것은 아니지만 많이 사용해야 익숙해지고 실력향상이 된다는 생각에 자주 쓰려고 하고 있습니다. 영어가 많아도 이해해주세요!\r\n            </p>\r\n            <ul>\r\n                <li><a href=\"https://github.com/DevMinGeonPark?tab=repositories\">\r\n                    Repository</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default Status;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Projects: React.FC = () => {\r\n    return (\r\n        <>\r\n            <h2>Projects</h2>\r\n            <div className=\"outline\">\r\n                <div className=\"outline-item\">\r\n                    <h3>C#</h3>\r\n                    <ul>\r\n                        <li><Link to=\"/projects/c-shap/black-toon-manger\">BlackToonManger</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"outline-item\">\r\n                    <h3>Typescript</h3>\r\n                    <ul>\r\n                        <li>Blog</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"outline-item\">\r\n                    <h3>Python</h3>\r\n                    <ul>\r\n                        <li><Link to=\"/python/image-manger\">ImageManger With Python Seleminum</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Projects;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Posts: React.FC = () => {\r\n    return (\r\n        <>\r\n            <h2>Posts</h2>\r\n            <div className=\"outline\">\r\n                <div className=\"outline-item\">\r\n                    <h3>Javscript</h3>\r\n                    <ul>\r\n                        <li>Basic Syntax</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"outline-item\">\r\n                    <h3>React</h3>\r\n                    <ul>\r\n                        <li><Link to=\"/react/conding-convention\">Coding Convention</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Posts;","import React from 'react';\r\nimport Status from './MainComponent/Status';\r\nimport Projects from './MainComponent/Projects';\r\nimport Posts from './MainComponent/Posts';\r\n//import Books from './MainComponent/Book';\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <Status />\r\n                <Projects />\r\n                <Posts />\r\n                {/* <Books /> */}\r\n                <h1>추가 구현예정</h1>\r\n                <ul>\r\n                    <li>검색 기능</li>\r\n                    <li>반응형 디자인</li>\r\n                    <li>댓글기능</li>\r\n                    <li>로그인 기능</li>\r\n                </ul>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default Main;","import React from 'react';\r\n\r\nconst CondingConvention: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>React Coding Convention</h2>\r\n                <div className=\"outline\">\r\n                    <div className=\"outline-item\">\r\n                        <h3>Introduction</h3>\r\n                        <p>\r\n                            블로그를 개발하던 중 막히는 부분들이 많았다.\r\n                            그런데 그 이유가 기술의 개념적인 부분들을 몰라서 그런 경우도 많지만,\r\n                            coding convention이 정해져 있지않아서 코드가 길어지면서 관리가 힘들어지고\r\n                            오류의 원인을 정확히 파악하지 못한 경우가 많았다.\r\n                            그러다보니 계속 이런식이면 변화가 없다는 생각이 문득 들어 React의 conding Convention을 찾던 중\r\n                            AirBnB에서 Github에 올린 \"Airbnb React/JSX Style Guide\"를 참고하게되었다. 또한 필요하다고 생각되는 부분만 발췌하였고 내 경우에 맞게 변경하였다.\r\n                            아직 가이드에 맞게 수정하는 중이라 가이드대로 되지 않은 부분들이 많지만 관련된 부분들을 정리해두는게 좋을 것 같아 작성하게되었다. <br />\r\n                            자세한 내용은 https://github.com/airbnb/javascript/tree/master/react에서 참고가능하다.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"outline-item\">\r\n                        <h3>Main Subject</h3>\r\n                        <ul>\r\n                            <li>\r\n                                Basic Rule\r\n                                <ul>\r\n                                    <li> Only include one React component per file.\r\n                                        <p>However, Multiple Stateless, or Pure, Components are allowed pre file.</p>\r\n                                    </li>\r\n                                    <li> Always use TSX syntax</li>\r\n                                    <li>Do not use <code>React.createElement</code> unless you’re initializing the app from a file that is not JSX.</li>\r\n                                </ul>\r\n                                <li> Do not use mixins. </li>\r\n                                <li>Naming\r\n                                    <ul>\r\n                                        <li>\r\n                                            Extensions:\r\n                                            Use <code>.tsx</code> extension for React component\r\n                                        </li>\r\n                                        <li>\r\n                                            Filename:\r\n                                            Use PascalCase for filenames\r\n                                        </li>\r\n                                        <li>\r\n                                            Reference Naming:\r\n                                            use PascalCase for React component and camelCase for their instances.\r\n                                        </li>\r\n                                        <li>\r\n                                            Component Naming:\r\n                                            Use the filename as the component name.\r\n                                            For example, <code>App.tsx</code> should have a reference name of <code>App</code>.\r\n                                            However, for root components of a directory, use index.jsx as the filename and use the directory name as the component name\r\n                                        </li>\r\n                                        <li>\r\n                                            Props Naming: Avoid using DOM component prop names for different purposes.<br />\r\n                                            ::variant 공부 후 변경하기.\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Alignment: Follow these alignment styles for JSX syntax.\r\n                                        </li>\r\n                                <li>\r\n                                    Quotes: Always use double quotes (\"\") for JSX attributes, but single quotes ('') for all other JS.\r\n                                        </li>\r\n                                <li>\r\n                                    Spacing:\r\n                                            <ul>\r\n                                        <li>\r\n                                            Always include a single space in your self0closing tag.\r\n                                                </li>\r\n                                        <li> Do not pad Jsx curly braces with spaces.</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    Props:\r\n                                            <ul>\r\n                                        <li>Always use camelCase for props names, or Pascal Case if the prop value is a React component.</li>\r\n                                        <li>Omit the value of the prop when it is explicitly true.</li>\r\n                                        <li>Always inclued an alt prop on <code>&#60;img&#62;</code> tag.\r\n                                                if the image is presentational, alt can be an empty string or the\r\n                                                <code>&#60;img&#62;</code> must have <code>role=\"presentation\"</code></li>\r\n                                        <li>Do not use words like \"image\", \"photo\", or \"pictrue\" in <code>&#60;img&#62;</code> <code>alt</code> props.</li>\r\n                                        <li>Use only valid, non-abstract ARIA roles.</li>\r\n                                        <li>Do not <code>accessKey</code> on elements.</li>\r\n                                        <li>\r\n                                            Avoid using an array index as key prop, prefer a stable ID <br />\r\n                                            We don't recommend using indexes for keys if the order of items may change.\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>Refs:\r\n                                            <ul><li>Always use ref callbacks.</li></ul>\r\n                                </li>\r\n                                <li>Parentheses:\r\n                                            <ul><li>Wrap JSX tags in parentheses when they span more than one line.</li></ul>\r\n                                </li>\r\n                                <li>Tag:\r\n                                    <ul>\r\n                                        <li>Always self-close tag that have no children.</li>\r\n                                        <li>If your component has multiline properties, close tis tag on a new line.</li>\r\n                                    </ul> \r\n                                </li>\r\n                                <li>Methods:\r\n                                    <ul>\r\n                                        <li>\r\n                                            Use arrow functions to close over loacl variables. it is handy when your need to pass additional data to an event handler.<br/>\r\n                                            Bind event handlers for the render method in the constructor.\r\n                                        </li>\r\n                                        <li>Do not use underscore prefix for internal methods of a React component</li>\r\n                                        <li>Be sure to return a balue in your <code>render</code> methods.</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default CondingConvention;","import React from 'react';\r\n\r\nconst BlackToonManger: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>Project : BlackToonManger With C#</h2>\r\n                <a href=\"https://github.com/DevMinGeonPark/BlackToonManger\">Github</a>\r\n                <h4>개발동기</h4>\r\n                <p>고교 떄 C언어, 대학에서 python을 공부했지만 대부분의 프로젝트가 Toy-Project \r\n                    수준도 되지못하는 기초적인 수준의 별찍기나 포인터를 활용한 전화번호부 만들기 정도 밖에 \r\n                    해보지 못했다. 공군을 지원해 개발병으로 군생활을 해보니 나와 비슷한 나이에 뛰어난 실력을 가진 사람들이 \r\n                    너무나 많았고 나도 한번 제대로 된 Toy-Project를 만들어보자는 생각에 평소 좋아하던 웹툰이나 만화를 받아볼 수 있는 프로그램을 만들어보게 되었다. <br/>\r\n                    개발언어를 C#으로 선택한 이유는 객체지향에 관한 지식이 거의 전무했기에 친한 선임이 애용하는 C#을 선택하여 많은 도움을 받고자했다. \r\n                    사이트는 테스트위주의 개발을 진행했고, 그 과정에서 서버로 보내는 요청이 상당히 많아서 네이버같은 사이트는 차단당할 위험이 크다 생각해 선정하게 되었다.\r\n                </p>\r\n\r\n                <h4>프로그램 설명</h4>\r\n                <p>\r\n                    기본적으로 콘솔창으로 실행하는 프로그램. GUI로 구성하지 않은 이유는 비동기적으로 GUI를 굳이 보여줄 필요가 없다고 생각해서이다. <br />\r\n                    사용자에게 파일명을 입력받고 사이트에 요청을 보낸다. 여기서 사이트는 리다이렉션되는 사이트에 자동으로 접속하게 구현했다. <br />\r\n                    입력받은 파일명을 사이트의 js로 구성된 json파일에 접근해 검색한다. <br />\r\n                    검색된 웹툰명들을 반환하고 유저의 선택을 받는다.\r\n                    유저가 선택한 파일을 다운받을 준비를 한다.<br />\r\n                    유저는 파일을 한개만 다운받을지 다 다운받을지를 결정할 수 있다.<br />\r\n                    유저의 선택에 따라 다운로드를 진행한다. 다운로드 진행중에는 폴더를 자동으로 만들며, 자동으로 압축까지 진행하여 저장한다.<br />\r\n                </p>\r\n\r\n                <h4>예상되는 오류</h4>\r\n                <p>\r\n                    사이트 관리자가 div태그를 한 개 더 추가하는 방식으로 크롤링을 피하려하는 경우가 많다. null이 반환되었다는 오류는 주로 이 경우이다.\r\n                </p>\r\n\r\n                <h4>후기</h4>\r\n                <p>\r\n                    아무것도 모르는 상태에서 시작한거라 모든 것들이 다 어렵고 새로웠다. <br />\r\n                    코딩 컨벤션, 비동기적 프로그래밍, 서버에 요청을 보내거나 받기, Josn파일 처리, 크롤링 방법론, C#의 기술들과 객체지향의 기본적인 개념 등을 배웠고,\r\n                    오류가 나면 하루종일 해결해보고 선임에게 코드리뷰를 받았는데, 하루종일 까이고 고치는걸 반복하며 실력이 많이 늘은걸 느꼈다. <br />\r\n                    이번 프로젝트를 통해 코딩 컨벤션의 중요성과 처음 기획단계를 얼마나 촘촘하게 해야되는지 느꼈다. <br />\r\n                    이 프로젝트의 경우 Top-Down 방식이 아닌 테스트위주 방식으로 개발했는데, 만들고나면 새로운 기능이 필요하고 새로운 기능을 만들면 오류가 나는 걸 경험하면서 초기 기획의 중요성을 뼈저리게 느꼈다. <br />\r\n                </p>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default BlackToonManger;","import React from 'react';\r\n\r\nconst ImageManger: React.FC = () => {\r\n    return (\r\n        <main className=\"from\">\r\n            <div className=\"maincontent\">\r\n                <h2>Project : ImageManger with python Seleminum</h2>\r\n                <a href=\"https://github.com/DevMinGeonPark/BlackToonManger\">Github</a>\r\n                <h4>개발동기</h4>\r\n                <p>\r\n                    추석 떄 스파르타 코딩클럽이라는 사이트에서 무료로 강의와 코칭을 한다길래 크롤링을 한번도 해본적이 없기에 이번 기회에 해보자는 마인드로 시작했다. <br />\r\n                    강의에서는 python seleminum을 이용해서 다음에 원하는 연예인사진을 자동으로 긁어오는 프로그램을 구현하는데 개인적으로 검색은 다 구글로 해결하는 입장에서 구글로 구현하는게 맞지 않아 싶어서 강의와는 다르게 구글로 구현했다.\r\n                </p>\r\n\r\n                <h4>프로그램 설명</h4>\r\n                <p>\r\n                    seleminum을 이용해서 구글에 원하는 이미지를 긁어오는 간단한 프로그램. 단편적으로 구현되어서 검색어를 입력받고 이미지를 다운받게는 구현되어있지 않다. 차후 블랙툰매니저에서는 구현되어있다.\r\n                </p>\r\n\r\n                <h4>후기</h4>\r\n                <p>\r\n                    객체지향 프로그램을 해본적이 없다보니 너무 어렵게만 생각한 것 같다. 강의가 너무 간단하게 구성되어있어서 중간에 하차하고 혼자만들었다. 이후 블렉툰 매니저를 만들 자신감을 얻었다.\r\n                </p>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default ImageManger;","import React from 'react';\r\nimport Main from './component/Main';\r\nimport ReactCondingConvention from './component/Post/React/CondingConvention';\r\nimport BlackToonManger from './component/Projects/Cshap/BlackToonManger';\r\nimport ImageManger from 'component/Projects/Python/ImageManger';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nconst Navigation: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Main} />\r\n            <Route path=\"/projects/c-shap/black-toon-manger\" exact component={BlackToonManger} />\r\n            <Route path=\"/python/image-manger\" exact component={ImageManger} />\r\n            <Route path=\"/react/conding-convention\" exact component={ReactCondingConvention} />\r\n            {/* <Redirect path=\"*\" to=\"/\" /> */}\r\n        </Switch>\r\n    );\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport Header from './component/Header';\r\nimport Footer from './component/Footer';\r\nimport Posts from './component/sidebarComponent/Posts';\r\nimport Projects from 'component/sidebarComponent/Projects';\r\nimport Navigation from './Navigation';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ProSidebar, Menu } from 'react-pro-sidebar';\r\nimport 'style/Style.scss';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <BrowserRouter basename={\"/Blog\"}>\r\n            <Header />\r\n            <div className=\"sidebar-mask\" />\r\n            <ProSidebar>\r\n                <Menu iconShape=\"square\">\r\n                    <Projects/>\r\n                    <Posts />\r\n                </Menu>\r\n            </ProSidebar>\r\n            <Navigation />\r\n            <Footer />\r\n        </BrowserRouter>\r\n    );\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}